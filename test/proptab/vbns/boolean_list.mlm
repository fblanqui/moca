type boolean = private
  | Batom of string
 
  | Bnot of boolean 
     begin 
        involutive  
        rule Bnot (Band l) -> Bor (List.map Bnot l)
        rule Bnot (Bor l) -> Band (List.map Bnot l)
     end 

  | Band of boolean list
        begin
           associative
           idempotent
           commutative
           distributive (Bor)
        end

  | Bor of boolean list
        begin
          associative 
          (* The following means that if we have twice the same branch
             they will be nearby and only one instance will be kept
             in the bor comb
          *)
          commutative
          idempotent
        end

;;
