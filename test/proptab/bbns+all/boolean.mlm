type boolean = private
  | Btrue | Bfalse
   
  | Batom of string
 
  | Bnot of boolean
     begin 
        involutive 
         distributive (Band, Bor) 
        distributive (Bor, Band)
       
     end 

  | Band of boolean * boolean
        begin
           associative
           idempotent
           commutative
           distributive (Bor) 
           inverse (Bnot, Bfalse)
           neutral (Btrue)
           absorbent (Bfalse)
        end


  | Bor of boolean * boolean
        begin
          associative 
          (* The following means that if we have twice the same branch
             they will be nearby and only one instance will be kept
             in the bor comb
          *)
          commutative
          idempotent
          inverse (Bnot, Btrue)
          neutral (Bfalse)
          absorbent (Btrue)
        end

   | Bimplies of boolean * boolean 
         begin
           (*rule Bimplies(x, y) when x = y -> Btrue*)
           rule Bimplies (x, y) -> Bor (Bnot x, y)  
         end
         
   | Bequiv of boolean * boolean  
         begin
           
           rule Bequiv (x, y) when x = y 
               -> Btrue
           rule Bequiv (x, y) -> Band (Bimplies(x, y), Bimplies(y, x))        
         end
;;
